import React, { useEffect, useState } from 'react'
import { AiFillMinusCircle, AiFillPlusCircle } from "react-icons/ai";
import Link from 'next/link';
import Head from 'next/head';
import { useRouter } from "next/router"
import { ToastContainer, toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';



const Checkout = ({ id, cart, clearCart, subTotal, addToCart, removeFromCart }) => {
  const router = useRouter()
  const [name, setName] = useState('')
  const [email, setEmail] = useState('')
  const [phone, setPhone] = useState('')
  const [address, setAddress] = useState('')
  const [pincode, setPincode] = useState('')
  const [city, setCity] = useState('')
  const [state, setState] = useState('')
  const [disabled, setDisabled] = useState(true)

  useEffect(() => {
    if (name.length > 3 && email.length > 3 && phone.length > 3 && address.length > 3 && pincode.length > 3) {
      setDisabled(false)
    }
    else {
      setDisabled(true)
    }
  }, [name, email, phone, pincode, address])


  const handleChange = async (e) => {

    if (e.target.name == 'name') {
      setName(e.target.value);
    }
    else if (e.target.name == 'email') {
      setEmail(e.target.value);
    }
    else if (e.target.name == 'phone') {
      setPhone(e.target.value);
    }
    else if (e.target.name == 'address') {
      setAddress(e.target.value);
    }
    else if (e.target.name == 'pincode') {
      setPincode(e.target.value);
    }
    else if (e.target.name == 'city') {
      setCity(e.target.value);
    }
    else if (e.target.name == 'state') {
      setState(e.target.value);
    }

  }

  const initiate = async () => {
    let price = 0
    let product_id
    let quantity = 0
    let order_id = Math.floor(Math.random() * Date.now());
    {
      Object.keys(cart).map((k) => {
        price = cart[k].price;
        product_id = k;
        quantity += quantity + cart[k].qty;
      })
    }
    price = price * quantity
    const data = { email: email, address, price, product_id, phone, quantity: quantity, order_id }
    let a = await fetch("http://localhost:8080/api/order/", {
      method: 'POST',
      headers: {
        'Content-type': 'application/json',
      },
      body: JSON.stringify(data)
    })

    let Res = await a.json()
    toast.success(Res, {
      position: "top-left",
      autoClose: 5000,
      hideProgressBar: false,
      closeOnClick: true,
      pauseOnHover: true,
      draggable: true,
      progress: undefined,
      theme: "light",
    });
    // let url1 = "http://localhost:3000/order?clearCart=1&id=" + product_id;
    let url = `http://localhost:3000/order?clearCart=1&pid=${product_id}&oid=${order_id}`
    router.push(url)
  }

  return (
    <>
      <Head>
        <title>Shopclues - CheckOut</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className='container my-auto mx-4 md:mx-20 min-h-screen'>
        <ToastContainer
          position="top-left"
          autoClose={5000}
          hideProgressBar={false}
          newestOnTop={false}
          closeOnClick
          rtl={false}
          pauseOnFocusLoss
          draggable
          pauseOnHover
          theme="light"
        />

        <Head>
          <title>CheckOut - Shopclues.com</title>
          <meta name="viewport" content="width=device-width, height=device-height, initial-scale=1.0, maximum-scale=1.0" />
        </Head>

        <h1 className='font-bold text-3xl my-8 text-center'>Checkout</h1>
        <h2 className='mx-4 md:mx-20 font-semibold'>1. Delivery details</h2>
        <div className="mx-4 md:mx-20 my-2 flex w-[80vw]">
          <div className='px-2 w-1/2'>
            <div className="mb-4">
              <label htmlFor="name" className="leading-7 text-sm text-gray-600">Name</label>
              <input value={name} onChange={handleChange} type="text" id="name" name="name" className="w-full bg-white rounded border border-gray-300 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out" />
            </div>
          </div>
          <div className='px-2 w-1/2'>
            <div className="mb-4">
              <label htmlFor="email" className="leading-7 text-sm text-gray-600">Email</label>
              <input value={email} onChange={handleChange} type="email" id="email" name="email" className="w-full bg-white rounded border border-gray-300 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out" />

            </div>
          </div>
        </div>

        <div className='px-2 w-[80vw] mx-4 md:mx-20'>
          <div className="mb-4">
            <label htmlFor="address" className="leading-7 text-sm text-gray-600">Address</label>
            <textarea onChange={handleChange} value={address} name="address" id="address" cols="30" rows="3" className="w-full bg-white rounded border border-gray-300 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out"></textarea>
          </div>
        </div>
        <div className="mx-4 md:mx-20 my-2 flex w-[80vw]">
          <div className='px-2 w-1/2'>
            <div className="mb-4">
              <label htmlFor="phone" className="leading-7 text-sm text-gray-600">Phone Number</label>
              <input placeholder='your 10-digit Phone Number' value={phone} onChange={handleChange} type="phone" id="phone" name="phone" className="w-full bg-white rounded border border-gray-300 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out" />
            </div>
          </div>
          <div className='px-2 w-1/2'>
            <div className="mb-4">
              <label htmlFor="pincode" className="leading-7 text-sm text-gray-600">Pincode</label>
              <input value={pincode} onChange={handleChange} type="text" id="pincode" name="pincode" className="w-full bg-white rounded border border-gray-300 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out" />
            </div>
          </div>
        </div>
        <div className="mx-4 md:mx-20 my-2 flex w-[80vw]">
          <div className='px-2 w-1/2'>
            <div className="mb-4">
              <label htmlFor="state" className="leading-7 text-sm text-gray-600">State</label>
              <input onChange={handleChange} type="text" value={state} id="state" name="state" className="w-full bg-white rounded border border-gray-300 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out" />
            </div>
          </div>
          <div className='px-2 w-1/2'>
            <div className="mb-4">
              <label htmlFor="city" className="leading-7 text-sm text-gray-600">District</label>
              <input onChange={handleChange} type="text" value={city} id="city" name="city" className="w-full bg-white rounded border border-gray-300 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out" />
            </div>
          </div>
        </div>
        <h2 className='mx-4 md:mx-20 font-semibold'>2. Review Cart Items & Pay</h2>

        <div className="sideCart bg-indigo-100 p-6 mx-4 md:mx-20 my-2 w-[80vw]">
          <ol className='list-decimal font-semibold'>
            {Object.keys(cart).length == 0 && <div className='my-4 font-semibold'>Your cart is Empty!</div>}
            {Object.keys(cart).map((k) => {
              return <li key={k}>
                <div className='item flex my-5'>
                  <div className='font-semibold'>{cart[k].name}({cart[k].size}/{cart[k].variant})</div>
                  <div className='w-1/3 font-semibold flex items-center justify-center text-lg'> <AiFillMinusCircle onClick={() => { removeFromCart(k, 1, cart[k].size, cart[k].name, cart[k].price, cart[k].variant) }} className='cursor-pointer text-indigo-500' /> <span className='mx-2 text-sm'>{cart[k].qty}</span> <AiFillPlusCircle className='cursor-pointer text-indigo-500' onClick={() => addToCart(k, 1, cart[k].size, cart[k].name, cart[k].price, cart[k].variant)} /> </div>
                </div>
              </li>
            })}
          </ol>

          <span className='font-bold'>Subtotal:â‚¹{subTotal}</span>
        </div>

        <Link href={'/checkout'}><button disabled={disabled} onClick={initiate} className="flex disabled:bg-indigo-300 mx-4 md:mx-24  text-white bg-indigo-500 border-0 py-2 px-2 focus:outline-none hover:bg-indigo-600 rounded text-sm"> Buy Now</button></Link>
      </div>
    </>
  )
}

export default Checkout
